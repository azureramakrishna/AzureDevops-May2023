WHY IAC?
--------
Neelima

DEV:
Webapp
keyvault
SQL
LogAnalytics
VNET
RG
NSG

100 VMs
500 SA

Shiva
Nonprod & PROD

CODE
Reusable
Predictable
Automated way of deployment


Getting started with ARMTemplates:
----------------------------------
VSCode --> Extensions --> Azure Resource Manager Snippets

ARMTemplates Elements/Strucure

Schema
ContentVersion
Parameters
Variables
Resources
Outputs

saanvikit-vm-osdisk

Functions:
---------
resoucegroup().location 
dependsOn
Concat
resourceId
toLower
copy.index()


NIC
NSG
PublicIP
VM
OSDisk
VNET
Subnet

AWS - CloudFormation 
Azure - ARMTemplates/Bicep 

Terraform:
---------

ARMTemplates											Terraform 
------------											----------
1. IAC Tool												1. IAC Tool (IAC - Infrastructure as a code)
2. Specific to Azure 									2. Open source (Azure, AWS, GCP, OCI, Onprem etc)
3. JSON Format											3. HCL (Hashicorp configuration language) Format 
4. Extension - .json									4. Extension - .tf
5. template.json 										5. main.tf
   parameters.json 										   variables.tf 
6. Structure: Schema 									6. Building blocks: Provider
			  ContentVersion												Resources
			  Parameters													outputs
			  Variables
			  Resources
			  Outputs 
7. Deploy using powershell commands 					7. Terraform Lifecycle 
	New-AzResourceGroupDeployment '							Terraform init
	-ResourceGroupName '									Terraform fmt
	-TemplateFile '											Terraform validate
	-TemplateParametersFile '								Terraform plan
	-Verbose												Terraform apply 
															Terraform destroy
															
Getting started:
---------------
Download Terraform - https://developer.hashicorp.com/terraform/downloads?product_intent=terraform
Copy the terraform.exe file to C:\windows directory
To validate open the cmd and type terraform 
Install extensions in VSCode: HashiCorp Terraform & HashiCorp Terraform

Azure Provider: azurerm
AWS Provider: aws
GCP Provider: google

Datasources:
-----------
JoF8Q~~rOJRfHZ_VubpKKQMi7eqIymQMvdYPTb9.

Scenarios:
---------
main.tf --> VM 
added Data disk to VM manually 
Terraform plan 

drift

Scenario2:
---------
terraform template --> VM 
deleted the VM manually 

terraform apply 

Terraform Import:
----------------
terraform import azurerm_managed_disk.example /subscriptions/6e4924ab-b00c-468f-ae01-e5d33e8786f8/resourceGroups/SAANVIKIT-GROUP/providers/Microsoft.Compute/disks/test-disk


Terraform Modules: Reusing the template 
-----------------

template 

DEV 
Testing
Prod

Local
Remote Module